   0  $accept : %entry% $end

   1  program : cdecls EOF

   2  cdecls : cdecl_list

   3  cdecl_list : cdecl
   4             | cdecl_list cdecl

   5  cdecl : scope CLASS ID LBRACE cbody RBRACE
   6        | scope CLASS ID LBRACE cbody RBRACE

   7  cbody :
   8        | cbody vdecl
   9        | cbody constructor
  10        | cbody fdecl

  11  scope : PRIVATE
  12        | PUBLIC

  13  vdecl : scope datatype ID

  14  constructor : name LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE

  15  fdecl : scope datatype ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE

  16  primitive : JCHAR
  17            | JBOOLEAN
  18            | JVOID

  19  name : CLASS ID

  20  type_tag : primitive
  21           | name

  22  datatype : type_tag

  23  formal : datatype ID

  24  formals_opt :
  25              | formal_list

  26  formal_list : formal
  27              | formal_list COMMA formal

  28  actuals_opt :
  29              | actuals_list

  30  actuals_list : expr
  31               | actuals_list COMMA expr

  32  stmt_list :
  33            | stmt_list stmt

  34  stmt : expr SEMI
  35       | vdecl SEMI
  36       | RETURN SEMI
  37       | RETURN expr SEMI
  38       | LBRACE stmt_list RBRACE
  39       | IF LPAREN expr RPAREN stmt
  40       | IF LPAREN expr RPAREN stmt ELSE stmt
  41       | FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt
  42       | WHILE LPAREN expr RPAREN stmt

  43  expr : INT_LITERAL
  44       | FLOAT_LITERAL
  45       | CHAR_LITERAL
  46       | TRUE
  47       | FALSE
  48       | ID
  49       | expr PLUS expr
  50       | expr MINUS expr
  51       | expr TIMES expr
  52       | expr DIVIDE expr
  53       | expr EQ expr
  54       | expr NEQ expr
  55       | expr LT expr
  56       | expr LEQ expr
  57       | expr GT expr
  58       | expr GEQ expr
  59       | expr AND expr
  60       | expr OR expr
  61       | NOT expr
  62       | ID ASSIGN expr
  63       | LPAREN expr RPAREN
  64       | ID LPAREN actuals_opt RPAREN

  65  expr_opt :
  66           | expr

  67  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (67)

	PUBLIC  shift 3
	PRIVATE  shift 4
	.  error

	program  goto 5
	cdecls  goto 6
	cdecl_list  goto 7
	cdecl  goto 8
	scope  goto 9


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	scope : PUBLIC .  (12)

	.  reduce 12


state 4
	scope : PRIVATE .  (11)

	.  reduce 11


state 5
	%entry% : '\001' program .  (67)

	.  reduce 67


state 6
	program : cdecls . EOF  (1)

	EOF  shift 10
	.  error


state 7
	cdecls : cdecl_list .  (2)
	cdecl_list : cdecl_list . cdecl  (4)

	PUBLIC  shift 3
	PRIVATE  shift 4
	EOF  reduce 2

	cdecl  goto 11
	scope  goto 9


state 8
	cdecl_list : cdecl .  (3)

	.  reduce 3


state 9
	cdecl : scope . CLASS ID LBRACE cbody RBRACE  (5)
	cdecl : scope . CLASS ID LBRACE cbody RBRACE  (6)

	CLASS  shift 12
	.  error


state 10
	program : cdecls EOF .  (1)

	.  reduce 1


state 11
	cdecl_list : cdecl_list cdecl .  (4)

	.  reduce 4


state 12
	cdecl : scope CLASS . ID LBRACE cbody RBRACE  (5)
	cdecl : scope CLASS . ID LBRACE cbody RBRACE  (6)

	ID  shift 13
	.  error


state 13
	cdecl : scope CLASS ID . LBRACE cbody RBRACE  (5)
	cdecl : scope CLASS ID . LBRACE cbody RBRACE  (6)

	LBRACE  shift 14
	.  error


state 14
	cdecl : scope CLASS ID LBRACE . cbody RBRACE  (5)
	cdecl : scope CLASS ID LBRACE . cbody RBRACE  (6)
	cbody : .  (7)

	.  reduce 7

	cbody  goto 15


state 15
	cdecl : scope CLASS ID LBRACE cbody . RBRACE  (5)
	cdecl : scope CLASS ID LBRACE cbody . RBRACE  (6)
	cbody : cbody . vdecl  (8)
	cbody : cbody . constructor  (9)
	cbody : cbody . fdecl  (10)

	CLASS  shift 16
	PUBLIC  shift 3
	PRIVATE  shift 4
	RBRACE  shift 17
	.  error

	scope  goto 18
	vdecl  goto 19
	constructor  goto 20
	fdecl  goto 21
	name  goto 22


state 16
	name : CLASS . ID  (19)

	ID  shift 23
	.  error


17: reduce/reduce conflict (reduce 5, reduce 6) on PUBLIC
17: reduce/reduce conflict (reduce 5, reduce 6) on PRIVATE
17: reduce/reduce conflict (reduce 5, reduce 6) on EOF
state 17
	cdecl : scope CLASS ID LBRACE cbody RBRACE .  (5)
	cdecl : scope CLASS ID LBRACE cbody RBRACE .  (6)

	.  reduce 5


state 18
	vdecl : scope . datatype ID  (13)
	fdecl : scope . datatype ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE  (15)

	CLASS  shift 16
	JBOOLEAN  shift 24
	JCHAR  shift 25
	JVOID  shift 26
	.  error

	datatype  goto 27
	name  goto 28
	primitive  goto 29
	type_tag  goto 30


state 19
	cbody : cbody vdecl .  (8)

	.  reduce 8


state 20
	cbody : cbody constructor .  (9)

	.  reduce 9


state 21
	cbody : cbody fdecl .  (10)

	.  reduce 10


state 22
	constructor : name . LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE  (14)

	LPAREN  shift 31
	.  error


state 23
	name : CLASS ID .  (19)

	.  reduce 19


state 24
	primitive : JBOOLEAN .  (17)

	.  reduce 17


state 25
	primitive : JCHAR .  (16)

	.  reduce 16


state 26
	primitive : JVOID .  (18)

	.  reduce 18


state 27
	vdecl : scope datatype . ID  (13)
	fdecl : scope datatype . ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE  (15)

	ID  shift 32
	.  error


state 28
	type_tag : name .  (21)

	.  reduce 21


state 29
	type_tag : primitive .  (20)

	.  reduce 20


state 30
	datatype : type_tag .  (22)

	.  reduce 22


state 31
	constructor : name LPAREN . formals_opt RPAREN LBRACE stmt_list RBRACE  (14)
	formals_opt : .  (24)

	CLASS  shift 16
	JBOOLEAN  shift 24
	JCHAR  shift 25
	JVOID  shift 26
	RPAREN  reduce 24

	datatype  goto 33
	name  goto 28
	formals_opt  goto 34
	primitive  goto 29
	type_tag  goto 30
	formal  goto 35
	formal_list  goto 36


state 32
	vdecl : scope datatype ID .  (13)
	fdecl : scope datatype ID . LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE  (15)

	LPAREN  shift 37
	CLASS  reduce 13
	PUBLIC  reduce 13
	PRIVATE  reduce 13
	RBRACE  reduce 13


state 33
	formal : datatype . ID  (23)

	ID  shift 38
	.  error


state 34
	constructor : name LPAREN formals_opt . RPAREN LBRACE stmt_list RBRACE  (14)

	RPAREN  shift 39
	.  error


state 35
	formal_list : formal .  (26)

	.  reduce 26


state 36
	formals_opt : formal_list .  (25)
	formal_list : formal_list . COMMA formal  (27)

	COMMA  shift 40
	RPAREN  reduce 25


state 37
	fdecl : scope datatype ID LPAREN . formals_opt RPAREN LBRACE stmt_list RBRACE  (15)
	formals_opt : .  (24)

	CLASS  shift 16
	JBOOLEAN  shift 24
	JCHAR  shift 25
	JVOID  shift 26
	RPAREN  reduce 24

	datatype  goto 33
	name  goto 28
	formals_opt  goto 41
	primitive  goto 29
	type_tag  goto 30
	formal  goto 35
	formal_list  goto 36


state 38
	formal : datatype ID .  (23)

	.  reduce 23


state 39
	constructor : name LPAREN formals_opt RPAREN . LBRACE stmt_list RBRACE  (14)

	LBRACE  shift 42
	.  error


state 40
	formal_list : formal_list COMMA . formal  (27)

	CLASS  shift 16
	JBOOLEAN  shift 24
	JCHAR  shift 25
	JVOID  shift 26
	.  error

	datatype  goto 33
	name  goto 28
	primitive  goto 29
	type_tag  goto 30
	formal  goto 43


state 41
	fdecl : scope datatype ID LPAREN formals_opt . RPAREN LBRACE stmt_list RBRACE  (15)

	RPAREN  shift 44
	.  error


state 42
	constructor : name LPAREN formals_opt RPAREN LBRACE . stmt_list RBRACE  (14)
	stmt_list : .  (32)

	.  reduce 32

	stmt_list  goto 45


state 43
	formal_list : formal_list COMMA formal .  (27)

	.  reduce 27


state 44
	fdecl : scope datatype ID LPAREN formals_opt RPAREN . LBRACE stmt_list RBRACE  (15)

	LBRACE  shift 46
	.  error


state 45
	constructor : name LPAREN formals_opt RPAREN LBRACE stmt_list . RBRACE  (14)
	stmt_list : stmt_list . stmt  (33)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	RBRACE  shift 51
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 64


state 46
	fdecl : scope datatype ID LPAREN formals_opt RPAREN LBRACE . stmt_list RBRACE  (15)
	stmt_list : .  (32)

	.  reduce 32

	stmt_list  goto 65


state 47
	expr : TRUE .  (46)

	.  reduce 46


state 48
	expr : FALSE .  (47)

	.  reduce 47


state 49
	expr : LPAREN . expr RPAREN  (63)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 66


state 50
	stmt : LBRACE . stmt_list RBRACE  (38)
	stmt_list : .  (32)

	.  reduce 32

	stmt_list  goto 67


state 51
	constructor : name LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE .  (14)

	.  reduce 14


state 52
	expr : NOT . expr  (61)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 68


state 53
	stmt : RETURN . SEMI  (36)
	stmt : RETURN . expr SEMI  (37)

	TRUE  shift 47
	FALSE  shift 48
	SEMI  shift 69
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 70


state 54
	stmt : IF . LPAREN expr RPAREN stmt  (39)
	stmt : IF . LPAREN expr RPAREN stmt ELSE stmt  (40)

	LPAREN  shift 71
	.  error


state 55
	stmt : FOR . LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt  (41)

	LPAREN  shift 72
	.  error


state 56
	stmt : WHILE . LPAREN expr RPAREN stmt  (42)

	LPAREN  shift 73
	.  error


state 57
	expr : INT_LITERAL .  (43)

	.  reduce 43


state 58
	expr : FLOAT_LITERAL .  (44)

	.  reduce 44


state 59
	expr : CHAR_LITERAL .  (45)

	.  reduce 45


state 60
	expr : ID .  (48)
	expr : ID . ASSIGN expr  (62)
	expr : ID . LPAREN actuals_opt RPAREN  (64)

	LPAREN  shift 74
	ASSIGN  shift 75
	SEMI  reduce 48
	RPAREN  reduce 48
	COMMA  reduce 48
	PLUS  reduce 48
	MINUS  reduce 48
	TIMES  reduce 48
	DIVIDE  reduce 48
	AND  reduce 48
	OR  reduce 48
	EQ  reduce 48
	NEQ  reduce 48
	LT  reduce 48
	LEQ  reduce 48
	GT  reduce 48
	GEQ  reduce 48


state 61
	vdecl : scope . datatype ID  (13)

	CLASS  shift 16
	JBOOLEAN  shift 24
	JCHAR  shift 25
	JVOID  shift 26
	.  error

	datatype  goto 76
	name  goto 28
	primitive  goto 29
	type_tag  goto 30


state 62
	stmt : vdecl . SEMI  (35)

	SEMI  shift 77
	.  error


state 63
	stmt : expr . SEMI  (34)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	SEMI  shift 78
	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	.  error


state 64
	stmt_list : stmt_list stmt .  (33)

	.  reduce 33


state 65
	fdecl : scope datatype ID LPAREN formals_opt RPAREN LBRACE stmt_list . RBRACE  (15)
	stmt_list : stmt_list . stmt  (33)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	RBRACE  shift 91
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 64


state 66
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)
	expr : LPAREN expr . RPAREN  (63)

	RPAREN  shift 92
	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	.  error


state 67
	stmt_list : stmt_list . stmt  (33)
	stmt : LBRACE stmt_list . RBRACE  (38)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	RBRACE  shift 93
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 64


state 68
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)
	expr : NOT expr .  (61)

	.  reduce 61


state 69
	stmt : RETURN SEMI .  (36)

	.  reduce 36


state 70
	stmt : RETURN expr . SEMI  (37)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	SEMI  shift 94
	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	.  error


state 71
	stmt : IF LPAREN . expr RPAREN stmt  (39)
	stmt : IF LPAREN . expr RPAREN stmt ELSE stmt  (40)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 95


state 72
	stmt : FOR LPAREN . expr_opt SEMI expr SEMI expr_opt RPAREN stmt  (41)
	expr_opt : .  (65)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	SEMI  reduce 65

	expr  goto 96
	expr_opt  goto 97


state 73
	stmt : WHILE LPAREN . expr RPAREN stmt  (42)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 98


state 74
	expr : ID LPAREN . actuals_opt RPAREN  (64)
	actuals_opt : .  (28)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	RPAREN  reduce 28

	actuals_opt  goto 99
	actuals_list  goto 100
	expr  goto 101


state 75
	expr : ID ASSIGN . expr  (62)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 102


state 76
	vdecl : scope datatype . ID  (13)

	ID  shift 103
	.  error


state 77
	stmt : vdecl SEMI .  (35)

	.  reduce 35


state 78
	stmt : expr SEMI .  (34)

	.  reduce 34


state 79
	expr : expr PLUS . expr  (49)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 104


state 80
	expr : expr MINUS . expr  (50)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 105


state 81
	expr : expr TIMES . expr  (51)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 106


state 82
	expr : expr DIVIDE . expr  (52)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 107


state 83
	expr : expr AND . expr  (59)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 108


state 84
	expr : expr OR . expr  (60)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 109


state 85
	expr : expr EQ . expr  (53)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 110


state 86
	expr : expr NEQ . expr  (54)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 111


state 87
	expr : expr LT . expr  (55)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 112


state 88
	expr : expr LEQ . expr  (56)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 113


state 89
	expr : expr GT . expr  (57)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 114


state 90
	expr : expr GEQ . expr  (58)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 115


state 91
	fdecl : scope datatype ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE .  (15)

	.  reduce 15


state 92
	expr : LPAREN expr RPAREN .  (63)

	.  reduce 63


state 93
	stmt : LBRACE stmt_list RBRACE .  (38)

	.  reduce 38


state 94
	stmt : RETURN expr SEMI .  (37)

	.  reduce 37


state 95
	stmt : IF LPAREN expr . RPAREN stmt  (39)
	stmt : IF LPAREN expr . RPAREN stmt ELSE stmt  (40)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	RPAREN  shift 116
	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	.  error


state 96
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)
	expr_opt : expr .  (66)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	SEMI  reduce 66
	RPAREN  reduce 66


state 97
	stmt : FOR LPAREN expr_opt . SEMI expr SEMI expr_opt RPAREN stmt  (41)

	SEMI  shift 117
	.  error


state 98
	stmt : WHILE LPAREN expr . RPAREN stmt  (42)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	RPAREN  shift 118
	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	.  error


state 99
	expr : ID LPAREN actuals_opt . RPAREN  (64)

	RPAREN  shift 119
	.  error


state 100
	actuals_opt : actuals_list .  (29)
	actuals_list : actuals_list . COMMA expr  (31)

	COMMA  shift 120
	RPAREN  reduce 29


state 101
	actuals_list : expr .  (30)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	RPAREN  reduce 30
	COMMA  reduce 30


state 102
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)
	expr : ID ASSIGN expr .  (62)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	SEMI  reduce 62
	RPAREN  reduce 62
	COMMA  reduce 62


state 103
	vdecl : scope datatype ID .  (13)

	.  reduce 13


state 104
	expr : expr . PLUS expr  (49)
	expr : expr PLUS expr .  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	TIMES  shift 81
	DIVIDE  shift 82
	SEMI  reduce 49
	RPAREN  reduce 49
	COMMA  reduce 49
	PLUS  reduce 49
	MINUS  reduce 49
	AND  reduce 49
	OR  reduce 49
	EQ  reduce 49
	NEQ  reduce 49
	LT  reduce 49
	LEQ  reduce 49
	GT  reduce 49
	GEQ  reduce 49


state 105
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr MINUS expr .  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	TIMES  shift 81
	DIVIDE  shift 82
	SEMI  reduce 50
	RPAREN  reduce 50
	COMMA  reduce 50
	PLUS  reduce 50
	MINUS  reduce 50
	AND  reduce 50
	OR  reduce 50
	EQ  reduce 50
	NEQ  reduce 50
	LT  reduce 50
	LEQ  reduce 50
	GT  reduce 50
	GEQ  reduce 50


state 106
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr TIMES expr .  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	.  reduce 51


state 107
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr DIVIDE expr .  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	.  reduce 52


state 108
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr AND expr .  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	SEMI  reduce 59
	RPAREN  reduce 59
	COMMA  reduce 59
	AND  reduce 59
	OR  reduce 59


state 109
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)
	expr : expr OR expr .  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	SEMI  reduce 60
	RPAREN  reduce 60
	COMMA  reduce 60
	OR  reduce 60


state 110
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr EQ expr .  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	SEMI  reduce 53
	RPAREN  reduce 53
	COMMA  reduce 53
	AND  reduce 53
	OR  reduce 53
	EQ  reduce 53
	NEQ  reduce 53


state 111
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr NEQ expr .  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	SEMI  reduce 54
	RPAREN  reduce 54
	COMMA  reduce 54
	AND  reduce 54
	OR  reduce 54
	EQ  reduce 54
	NEQ  reduce 54


state 112
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr LT expr .  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	SEMI  reduce 55
	RPAREN  reduce 55
	COMMA  reduce 55
	AND  reduce 55
	OR  reduce 55
	EQ  reduce 55
	NEQ  reduce 55
	LT  reduce 55
	LEQ  reduce 55
	GT  reduce 55
	GEQ  reduce 55


state 113
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr LEQ expr .  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	SEMI  reduce 56
	RPAREN  reduce 56
	COMMA  reduce 56
	AND  reduce 56
	OR  reduce 56
	EQ  reduce 56
	NEQ  reduce 56
	LT  reduce 56
	LEQ  reduce 56
	GT  reduce 56
	GEQ  reduce 56


state 114
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr GT expr .  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	SEMI  reduce 57
	RPAREN  reduce 57
	COMMA  reduce 57
	AND  reduce 57
	OR  reduce 57
	EQ  reduce 57
	NEQ  reduce 57
	LT  reduce 57
	LEQ  reduce 57
	GT  reduce 57
	GEQ  reduce 57


state 115
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr GEQ expr .  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	SEMI  reduce 58
	RPAREN  reduce 58
	COMMA  reduce 58
	AND  reduce 58
	OR  reduce 58
	EQ  reduce 58
	NEQ  reduce 58
	LT  reduce 58
	LEQ  reduce 58
	GT  reduce 58
	GEQ  reduce 58


state 116
	stmt : IF LPAREN expr RPAREN . stmt  (39)
	stmt : IF LPAREN expr RPAREN . stmt ELSE stmt  (40)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 121


state 117
	stmt : FOR LPAREN expr_opt SEMI . expr SEMI expr_opt RPAREN stmt  (41)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 122


state 118
	stmt : WHILE LPAREN expr RPAREN . stmt  (42)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 123


state 119
	expr : ID LPAREN actuals_opt RPAREN .  (64)

	.  reduce 64


state 120
	actuals_list : actuals_list COMMA . expr  (31)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	expr  goto 124


state 121
	stmt : IF LPAREN expr RPAREN stmt .  (39)
	stmt : IF LPAREN expr RPAREN stmt . ELSE stmt  (40)

	ELSE  shift 125
	PUBLIC  reduce 39
	PRIVATE  reduce 39
	TRUE  reduce 39
	FALSE  reduce 39
	LPAREN  reduce 39
	LBRACE  reduce 39
	RBRACE  reduce 39
	NOT  reduce 39
	RETURN  reduce 39
	IF  reduce 39
	FOR  reduce 39
	WHILE  reduce 39
	INT_LITERAL  reduce 39
	FLOAT_LITERAL  reduce 39
	CHAR_LITERAL  reduce 39
	ID  reduce 39


state 122
	stmt : FOR LPAREN expr_opt SEMI expr . SEMI expr_opt RPAREN stmt  (41)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	SEMI  shift 126
	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	.  error


state 123
	stmt : WHILE LPAREN expr RPAREN stmt .  (42)

	.  reduce 42


state 124
	actuals_list : actuals_list COMMA expr .  (31)
	expr : expr . PLUS expr  (49)
	expr : expr . MINUS expr  (50)
	expr : expr . TIMES expr  (51)
	expr : expr . DIVIDE expr  (52)
	expr : expr . EQ expr  (53)
	expr : expr . NEQ expr  (54)
	expr : expr . LT expr  (55)
	expr : expr . LEQ expr  (56)
	expr : expr . GT expr  (57)
	expr : expr . GEQ expr  (58)
	expr : expr . AND expr  (59)
	expr : expr . OR expr  (60)

	PLUS  shift 79
	MINUS  shift 80
	TIMES  shift 81
	DIVIDE  shift 82
	AND  shift 83
	OR  shift 84
	EQ  shift 85
	NEQ  shift 86
	LT  shift 87
	LEQ  shift 88
	GT  shift 89
	GEQ  shift 90
	RPAREN  reduce 31
	COMMA  reduce 31


state 125
	stmt : IF LPAREN expr RPAREN stmt ELSE . stmt  (40)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 127


state 126
	stmt : FOR LPAREN expr_opt SEMI expr SEMI . expr_opt RPAREN stmt  (41)
	expr_opt : .  (65)

	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	NOT  shift 52
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	RPAREN  reduce 65

	expr  goto 96
	expr_opt  goto 128


state 127
	stmt : IF LPAREN expr RPAREN stmt ELSE stmt .  (40)

	.  reduce 40


state 128
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt . RPAREN stmt  (41)

	RPAREN  shift 129
	.  error


state 129
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN . stmt  (41)

	PUBLIC  shift 3
	PRIVATE  shift 4
	TRUE  shift 47
	FALSE  shift 48
	LPAREN  shift 49
	LBRACE  shift 50
	NOT  shift 52
	RETURN  shift 53
	IF  shift 54
	FOR  shift 55
	WHILE  shift 56
	INT_LITERAL  shift 57
	FLOAT_LITERAL  shift 58
	CHAR_LITERAL  shift 59
	ID  shift 60
	.  error

	scope  goto 61
	vdecl  goto 62
	expr  goto 63
	stmt  goto 130


state 130
	stmt : FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt .  (41)

	.  reduce 41


Rules never reduced:
	cdecl : scope CLASS ID LBRACE cbody RBRACE  (6)


State 17 contains 3 reduce/reduce conflicts.


51 terminals, 24 nonterminals
68 grammar rules, 131 states
